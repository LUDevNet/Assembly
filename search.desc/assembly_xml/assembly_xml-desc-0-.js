searchState.loadedDescShard("assembly_xml", 0, "The XML formats\nThe XML <code>&lt;AllSettings&gt;</code> format\nThe XML <code>&lt;Behavior&gt;</code> format\nThe XML <code>&lt;BlockLibrary&gt;</code> format\nCode that’s used in all XML modules\nThe XML <code>&lt;credits&gt;</code> format\nThe XML <code>&lt;database&gt;</code> format\nThe XML <code>&lt;envData&gt;</code> format\nThe XML <code>&lt;hud&gt;</code> format\nThe XML <code>&lt;LEGOPrimitive&gt;</code> format\nThe XML <code>&lt;localization&gt;</code> format\nThe XML <code>&lt;ModularBuild&gt;</code> format\nThe XML <code>&lt;ModuleInfo&gt;</code> format\nThe XML <code>&lt;nduiml&gt;</code> format\nThe XML <code>&lt;obj&gt;</code> format (character data)\nThe XML <code>&lt;triggers&gt;</code> format\nThe XML <code>&lt;UISettings&gt;</code> format\nData returned from <code>UniverseConfig.svc</code>\nA single action\nOne model behavior\nSend a chat message\nA group of actions\nMove to the interactor\nWhen the object is attacked\nWhen receiving a chat message\nWhen a player comes close\nPlay a sound\nSmash the object\nRevert a smashing\nWait for some time\nThe actions for this compound\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe amount of time to wait\nDistance to trigger\nUnclear\nUnclear\nUnclear\nMessage to post to chat\nMessage to post to chat\nUnclear\nGUID (<code>{...}</code>) of the audio\nReached EOF while searching for {0}\nContains the error value\nExpected &lt;?xml declaration\nContains the success value\nFailed to read the next XML event\nThe result type for this module\nXML Attribute parsing error\nA general error type\nFunctions to expect exactly one event\nExpect an <code>&lt;?xml …</code> declaration\nExpect an opening tag <code>&lt;{key}&gt;</code>\nExpect a closing tag <code>&lt;/{key}&gt;</code>\nExpect an opening tag <code>&lt;{key} name=&quot;…&quot;&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLiteral Character data \nComment <code>&lt;!-- ... --&gt;</code>\nXML Declaration <code>&lt;?xml ... ?&gt;</code>\nDocument type declaration <code>&lt;!DOCTYPE xyz&gt;</code>\nEmpty tag <code>&lt;tag/&gt;</code>\nEnd Tag <code>&lt;/tag&gt;</code>\nEnd of file\nContains the error value\nThe errors for this module\nExpected Attribute <code>{0}</code>, found <code>{1:?}</code>\nExpected end tag <code>{0}</code>, found <code>{1:?}</code>\nExpected &lt;{0}&gt; or &lt;/{1}&gt;, but found {2:?}\nExpected tag <code>{0}</code>, found <code>{1:?}</code>\nGeneric\nMissing Attribute <code>{0}</code>\nMissing end tag <code>{0}</code>\nMissing tag <code>{0}</code>\nMissing text\nMissing text or end tag <code>{0}</code>\nContains the success value\nProcessing instruction <code>&lt;?xyz ... ?&gt;</code>\nThe result type for this module\nStart Tag <code>&lt;tag&gt;</code>\nPlain Text\nMalformed XML\nMalformed XML Attribute\nThe kind of an XML event\nExpect an attribute on an opening tag and return a parsed …\nExpect an\nExpect a closing tag and return it\nExpect an opening tag and return it\nExpect some text and return it\nExpect either a text node or an end tag\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>bigint</code>\n<code>binary</code>\n<code>bit</code>\n<code>char</code>\nThe information on a column\n<code>datetime</code>\n<code>float</code>\n<code>image</code>\n<code>int</code>\n<code>nchar</code>\n<code>ntext</code>\n<code>nvarchar</code>\n<code>null</code>\n<code>real</code>\nA row of the database\n‘smalldatetime’\n<code>smallint</code>\n<code>text</code>\n<code>tinyint</code>\nUnknown value type ‘{0}’\nThe value types for the database\n<code>varbinary</code>\n<code>varchar</code>\n<code>xml</code>\nExpects an empty <code>&lt;column …/&gt;</code> tag or a closing <code>&lt;/columns&gt;</code> …\nExpects an opening <code>&lt;columns&gt;</code> tag\nExpects an opening <code>&lt;database&gt;</code>\nExpects an empty <code>&lt;row …/&gt;</code> tag or a closing <code>&lt;/rows&gt;</code> tag\nExpects an opening <code>&lt;rows&gt;</code> tag\nExpects an opening <code>&lt;table&gt;</code> tag or a closing <code>&lt;/database&gt;</code> tag\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the column\nThe data type of the column\nIterator over int subkeys\nA simple string interner\nI/O Error\nA key for LocaleNode children\nSome problem with loading a locale file\nA node in the locale tree\nReference to a LocaleNode with an Interner\nThe root of a loaded locale XML\nIterator over String subkeys\nIterator over String subkeys\nXml\nTurn root into a reference\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCheck for the presence of a single key\nGet an integer child\nReturn all keys that correspond to this node\nCall <code>LocaleNode::get_keys</code> with the <code>Interner</code>\nGet an integer child\nGet the integer children of this LocaleNode\nThe (optional) children with a numeric key\nIntern a string, returning a key\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the interner Key for this value\nLoad a locale file\nLookup a <code>super::Key</code> to return a reference to str\nGet the actual node\nGet the string children of this LocaleNode\nThe (optional) children with a non-numeric key\nGet the string interner in this tree\nGet the string interner in this tree\nGet a mutable reference to the string interner in this tree\nGet the value of this LocaleNode\nThe translation at the current node\nCreate a new instance\nData for a (player) object <code>&lt;obj&gt;</code>\nData for the <code>Character</code> component\nCharacter\nData for the <code>Destructible</code> component\nDestructible Component\nData for the <code>PlayerFlags</code> component\nFlags\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nData for the <code>Inventory</code> component\nInventory Component\nLevel Progression\nData for the <code>LevelProgression</code> component\nData for the <code>Minifig</code> component\nMinifigure Component\nData for the <code>Mission</code> component\nMissions\nData for the <code>Pet Control</code> component\nPets\nData for respawn positions\nRespawn points\nVersion\nData for the <code>Character</code> component\nA single unlocked emote\nUnlocked emotes\nA level the player visited\nList of zone summaries\nList of zone summaries\nA single zone summary\nNumber of achievements\nNumber of bricks collected\nList of unlocked emotes\nThe list of summaries\nThe list of summaries\nNumber of coins collected\nNumber of enemies smashed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID from the <code>Emotes</code> tables\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of quick-builds constructed\nUnlocked emotes\nZone summaries\nZone summaries\nBuff Component\nData for the <code>Destructible</code> component\nCurrent Armor\nMaximum Armor\nBuffs\nObject is Dead\nReturns the argument unchanged.\nReturns the argument unchanged.\nHealth Current\nMaximum Health\nCurrent Imagination\nMaximum Imagination\nImmunity\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRespawn Health\nRespawn Imagination\nBatch of 64 adjacent player flags\nData for the <code>PlayerFlags</code> component\nList of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nID (offset / 64)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValue of 64 flags\nA storage container\nA list of bags\nOne group\nData for the <code>Inventory</code> component\nAn item in an inventory\nA list of items for a storage container\nExtra item information\nAll items\n<code>user_group XXX</code>\nSpace-separated LOTs\nName\n??\nType of the group\nUnknown\nUGC name?\nInventory ‘Bags’\nWhether the item is bound\nItems in the storage container\nItems in the bag\nLOT of the item in the consumable slot\nAmount of items for stackable items.\nBoolean whether the item is equipped.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroups\nObject ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nItems\nSize of the bag i.e. Amount of slots\nModule Assembly\nSlot\nSome kind of ID for models. Investigate. Referred to by …\nLOT\nType of the bag. See <code>InventoryType</code> enum for values.\nType of the bag. See <code>InventoryType</code> enum for values.\nExtra Info\nData for the <code>LevelProgression</code> component\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBase Player Level\nData for the <code>Minifig</code> component\nChest Decal\nEyebrow Style\nEye Style.\nReturns the argument unchanged.\nHair Color\nHair Style\nHead Color\nHead Style\nCalls <code>U::from(self)</code>.\nLeft Hand\nLegs\nMouth Style.\nRight Hand\nTorso\nA single mission\nA list of missions\nProgress for a task\nData for the <code>Mission</code> component\nCurrently active missions\nCompleted missions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of missions\nA single pet\nData for the <code>Pet Control</code> component\nList of pets\nReturns the argument unchanged.\nReturns the argument unchanged.\nPet ObjectID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPet template (LOT)\nModeration status (?)\nName of the pet\n???\nData for respawn positions (?)\nSingle respawn point\nRespawn points\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWorld to which this entry applies\nX-coordinate\nY-coordinate\nZ-coordinate\nInformation on account registration\nInformation on the CDN client\nThe root of the <code>EnvironmentInfo</code> endpoint\nInformation on the game\nInformation on downloading the game\nA single server (<em>Universe</em>) that can be selected\nThe list of servers\nInformation on accounts\nURL of the auth server\nURL for login to subscription management\nInformation for the CDN client\nManifest of files specific to running Windows programs on …\nURL for registration as a user\nConfiguration for the patching process\nAn ID for the Akamai CDN\nURL to submit crash logs\nInfo for moderation (?)\nID of the data center\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nURL for the game API\nURL for game content\nInformation on the game\nURL of the installer for major updates\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage Tag of the server\nOld launcher URL?\nURL of the website shown in the patcher\nLog level\nURL of the metrics server\nDisplay name of the server\nWhether this server is available\nThe patcher subdirectory\nInformation on the general patcher process\nThe patch server\nWhether to use https (?)\nUnknown\nThe list of servers\nInformation on individual servers/universes\nURL to log into an account\nURL to sign up for an account\nWhether this server is selected by default\nCDN info for user generated content\nURL for the UGC controller\nWhether to use online model conversion\nWhether to use the Akamai download manager\nCurrent version of the game\nType of version dir (default 0)\nAPI url (?)")